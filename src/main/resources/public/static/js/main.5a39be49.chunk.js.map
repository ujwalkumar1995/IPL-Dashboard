{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","match","teamName","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","process","response","json","data","fetchTeam","title","value","totalMatches","totalWins","color","slice","map","id","split","YearSelector","years","i","push","year","MatchPage","setMatches","fetchMatches","TeamTile","HomePage","teams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a39be49.chunk.js","sourcesContent":["import { React } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport './MatchDetailCard.scss'\r\n\r\nexport const MatchDetailCard = ({match,teamName}) => {\r\n  if(!match)\r\n      return null;\r\n  const otherTeam = match.team1 === teamName ? match.team2: match.team1; \r\n  const otherTeamRoute = `/teams/${otherTeam}`\r\n  const isMatchWon = teamName === match.matchWinner;\r\n  return (\r\n    <div className={isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard loss-card'}>\r\n      <div>\r\n      <span className=\"vs\">vs</span>\r\n      <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\r\n      <h2 className=\"match-date\">{match.date}</h2>\r\n      <h3 className=\"match-venue\">at {match.venue}</h3>\r\n      <h3 className=\"match-result\" >{match.matchWinner} won by {match.resultMargin} {match.result} </h3>\r\n      </div>\r\n      <div className=\"additional-detail\">\r\n        <h3>First Innings</h3>\r\n        <p>{match.team1}</p>\r\n        <h3>Second Innings</h3>\r\n        <p>{match.team2}</p>\r\n        <h3>Man of the Match</h3>\r\n        <p>{match.playerOfMatch}</p>\r\n        <h3>Umpires</h3>\r\n        <p>{match.umpire1}, {match.umpire2}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import { React } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport './MatchSmallCard.scss'\r\n\r\nexport const MatchSmallCard = ({match,teamName}) => {\r\n  if(!match)\r\n    return null;\r\n  const otherTeam = match.team1 === teamName ? match.team2: match.team1;\r\n  const isMatchWon = teamName === match.matchWinner;\r\n  const otherTeamRoute = `/teams/${otherTeam}`\r\n  return (\r\n    <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard loss-card'}>\r\n      <span className=\"vs\">vs</span>\r\n      <h1>\r\n        <Link to={otherTeamRoute}>{otherTeam}</Link>\r\n      </h1>\r\n      <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result} </p>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import { React, useEffect, useState } from 'react';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { MatchSmallCard } from '../components/MatchSmallCard';\r\nimport {useParams, Link} from 'react-router-dom'\r\nimport './TeamPage.scss'\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\n\r\nexport const TeamPage = () => {\r\n  const [team,setTeam] = useState({matches:[]});\r\n  const {teamName} = useParams();\r\n  useEffect(\r\n    () => {\r\n          const fetchTeam = async () => {\r\n          const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\r\n          const data = await response.json();\r\n          setTeam(data);\r\n      };\r\n      fetchTeam();\r\n    },\r\n    [teamName]\r\n  );\r\n\r\n  if(!team || !team.teamName){\r\n    return <h1>Team not found</h1>\r\n  }\r\n  return (\r\n    <div className=\"TeamPage\">\r\n        <div className=\"team-name-section\">\r\n          <h1 className=\"team-name\">{team.teamName}</h1>\r\n        </div>\r\n        <div className=\"win-loss-section\">\r\n          Wins / Losses\r\n          <PieChart\r\n            data={[\r\n              { title: 'Losses', value: team.totalMatches - team.totalWins, color: '#a34d5d' },\r\n              { title: 'Wins', value: team.totalWins, color: '#4da375' }\r\n            ]}\r\n          />\r\n        </div>\r\n        <div className=\"match-detail-section\">\r\n          <h3>Latest Matches</h3>\r\n          <MatchDetailCard teamName={team.teamName} match={team.matches[0]} />\r\n        </div>\r\n        {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match = {match} />)}\r\n        <div className=\"more-link\">\r\n        <Link to ={`/teams/${teamName}/matches/${team.matches[0].date.split(\"-\")[0]}`}>More ></Link>\r\n          \r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import {React} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './YearSelector.scss'\r\n\r\nexport const YearSelector = ({teamName}) => {\r\n\r\n    let years = [];\r\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n    for(let i=startYear;i<=endYear;i++){\r\n        years.push(i);\r\n    }\r\n\r\n    return(\r\n        <ol className = \"YearSelector\">\r\n            {years.map(year => \r\n            (<li key={year}>\r\n                <Link  to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\r\n            </li>)\r\n            )}\r\n        </ol>\r\n    ) \r\n}","import { React, useEffect, useState } from 'react';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport {useParams} from 'react-router-dom'\r\nimport './MatchPage.scss'\r\nimport { YearSelector } from '../components/YearSelector';\r\n\r\nexport const MatchPage = () => {\r\n  \r\n  const [matches,setMatches] = useState([]);\r\n  const {teamName,year} = useParams();\r\n  useEffect(\r\n    () => {\r\n          const fetchMatches = async () => {\r\n          const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`);\r\n          const data = await response.json();\r\n          setMatches(data);\r\n      };\r\n      fetchMatches();\r\n    },\r\n    [teamName,year]\r\n  );\r\n\r\n  return (\r\n    <div className=\"MatchPage\">\r\n        <div className=\"year-selector\">\r\n          <h3>Select Year</h3>\r\n          <YearSelector  teamName={teamName}/>\r\n        </div>\r\n        <div>\r\n        <h1 className = \"page-heading\">{teamName} matches in {year}</h1>\r\n          {\r\n            matches.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} />)\r\n          }\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import {React} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './TeamTile.scss'\r\n\r\nexport const TeamTile = ({teamName}) => {\r\n    return (\r\n        <div className = \"TeamTile\">\r\n            <h1>\r\n                <Link to={`/teams/${teamName}`}>\r\n                    {teamName}\r\n                </Link>\r\n            </h1>\r\n        </div>\r\n    )\r\n}","import { React, useEffect, useState } from 'react';\r\nimport { TeamTile } from '../components/TeamTile';\r\nimport './HomePage.scss'\r\n\r\nexport const HomePage = () => {\r\n  const [teams,setTeam] = useState([]);\r\n  useEffect(\r\n    () => {\r\n          const fetchAllTeams = async () => {\r\n          const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team`);\r\n          const data = await response.json();\r\n          setTeam(data);\r\n      };\r\n      fetchAllTeams();\r\n    },\r\n    []\r\n  );\r\n\r\n  if(!teams){\r\n    return <h1>Team not found</h1>\r\n  }\r\n  return (\r\n    <div className=\"HomePage\">\r\n        <div className=\"header-section\">\r\n            <h1 className=\"app-name\">IPL Dashboard</h1>\r\n        </div>\r\n        <div className=\"team-grid\">\r\n            { teams.map(team => <TeamTile key={team.id} teamName={team.teamName} />)}\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import { TeamPage } from './pages/TeamPage';\nimport { MatchPage } from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport './App.scss';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n            <Route path=\"/teams/:teamName/matches/:year\">\n              <MatchPage />\n            </Route>\n            <Route path=\"/teams/:teamName\">\n              <TeamPage />\n            </Route>\n            <Route path=\"/\">\n              <HomePage/>\n            </Route>\n        </Switch>\n      </Router> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}